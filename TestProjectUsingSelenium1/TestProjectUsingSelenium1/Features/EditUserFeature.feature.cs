// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.5.0.0
//      SpecFlow Generator Version:3.5.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestProjectUsingSelenium1.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EditPersonalInformationUser")]
    public partial class EditPersonalInformationUserFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "EditUserFeature.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "EditPersonalInformationUser", @"	In order to validate edit personal informartion user on automationpractice.com/index.php website.
	Navigate on the automationpractice.com/index.php website.
	Click the signin button.
    Click the my personal information button.
	Edit the text boxes and click on the save button.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("EditPersonalInformationUser")]
        [NUnit.Framework.CategoryAttribute("EditPersonalInformationUser")]
        [NUnit.Framework.TestCaseAttribute("EditDaniel", "EditTest", "testdaniel16@gmail.com", "test12345", "test123", "test123", null)]
        public virtual void EditPersonalInformationUser(string editUserFirstNameValue, string editUserLastNameValue, string editUserEmailValue, string currentPasswordValue, string newPasswordValue, string confirmationPasswordValue, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "EditPersonalInformationUser"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("editUserFirstNameValue", editUserFirstNameValue);
            argumentsOfScenario.Add("editUserLastNameValue", editUserLastNameValue);
            argumentsOfScenario.Add("editUserEmailValue", editUserEmailValue);
            argumentsOfScenario.Add("currentPasswordValue", currentPasswordValue);
            argumentsOfScenario.Add("newPasswordValue", newPasswordValue);
            argumentsOfScenario.Add("confirmationPasswordValue", confirmationPasswordValue);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EditPersonalInformationUser", null, tagsOfScenario, argumentsOfScenario);
#line 10
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                            "userEmail",
                            "userPassword"});
                table9.AddRow(new string[] {
                            "testdaniel@gmail.com",
                            "test12345"});
#line 11
 testRunner.Given("I navigate to website and I login with following credentials", ((string)(null)), table9, "Given ");
#line hidden
#line 14
 testRunner.And("I click on the my personal information button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "editUserFirstName",
                            "editUserLastName",
                            "editUserEmail",
                            "currentPassword",
                            "newPassword",
                            "confirmationPassword"});
                table10.AddRow(new string[] {
                            string.Format("{0}", editUserFirstNameValue),
                            string.Format("{0}", editUserLastNameValue),
                            string.Format("{0}", editUserEmailValue),
                            string.Format("{0}", currentPasswordValue),
                            string.Format("{0}", newPasswordValue),
                            string.Format("{0}", confirmationPasswordValue)});
#line 15
 testRunner.When("I edit the text boxex with following data", ((string)(null)), table10, "When ");
#line hidden
#line 18
 testRunner.And("I click on the save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.Then("I validated if the flyout succes alert is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
